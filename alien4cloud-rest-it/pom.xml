<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>alien4cloud</groupId>
        <artifactId>alien4cloud-parent</artifactId>
        <version>1.1.0-SM9-SNAPSHOT</version>
    </parent>
    <artifactId>alien4cloud-rest-it</artifactId>
    <packaging>war</packaging>

    <name>Alien 4 Cloud REST Integration Test</name>
    <description>Integration tests for Alien's REST API.</description>

    <properties>
        <sonar.language>java</sonar.language>
        <sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <jclouds.version>1.9.1</jclouds.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>alien4cloud</groupId>
            <artifactId>alien4cloud-rest-api</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcprov-jdk15</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>${springfox-swagger2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <version>1.2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>5.0.0.Alpha2</version>
            <classifier>ALIEN4CLOUD</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
            <version>0.11.0</version>
        </dependency>
        <!-- jclouds dependencies -->
        <dependency>
            <groupId>org.apache.jclouds.driver</groupId>
            <artifactId>jclouds-slf4j</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.driver</groupId>
            <artifactId>jclouds-sshj</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <!-- jclouds OpenStack dependencies -->
        <dependency>
            <groupId>org.apache.jclouds.provider</groupId>
            <artifactId>aws-ec2</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.provider</groupId>
            <artifactId>aws-s3</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.api</groupId>
            <artifactId>openstack-keystone</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.api</groupId>
            <artifactId>openstack-nova</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.api</groupId>
            <artifactId>openstack-cinder</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jclouds.labs</groupId>
            <artifactId>openstack-neutron</artifactId>
            <version>${jclouds.version}</version>
        </dependency>
        <dependency>
            <groupId>junit-addons</groupId>
            <artifactId>junit-addons</artifactId>
            <version>1.4</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>sonatype-snapshot</id>
            <name>Sonatype snapshot</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <build>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/main/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <id>prepare-test-data</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>alien4cloud.it.setup.PrepareTestData</mainClass>
                            <classpathScope>test</classpathScope>
                            <arguments>
                                <argument>${project.basedir}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-reports</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>alien4cloud.cucumber.report.ReportMerger</mainClass>
                            <classpathScope>test</classpathScope>
                            <arguments>
                                <argument>${project.basedir}/target/cucumber</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Add resources directories to the war file -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webappDirectory>${project.build.directory}/alien4cloud-rest-war</webappDirectory>
                    <webResources>
                        <!-- Add default types archives folder to the war file -->
                        <resource>
                            <directory>${project.parent.basedir}/alien4cloud-core/src/main/default-normative-types
                            </directory>
                            <!-- override the destination directory for this resource -->
                            <targetPath>WEB-INF/classes/default-normative-types</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>do-test</id>
            <activation>
                <property>
                    <name>doTest</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>clean-test-data</id>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <tasks>
                                        <delete includeemptydirs="true" failonerror="false">
                                            <fileset dir="${user.home}/.alien" includes="**/*"/>
                                        </delete>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>${maven.cargo.version}</version>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <container>
                                <containerId>jetty9x</containerId>
                                <artifactInstaller>
                                    <groupId>org.eclipse.jetty</groupId>
                                    <artifactId>jetty-distribution</artifactId>
                                    <version>${jetty.version}</version>
                                </artifactInstaller>
                                <log>${basedir}/target/cargo.log</log>
                                <output>${basedir}/target/jetty.log</output>
                                <timeout>180000</timeout>
                            </container>

                            <configuration>
                                <properties>
                                    <cargo.servlet.port>8088</cargo.servlet.port>
                                    <cargo.logging>high</cargo.logging>
                                    <cargo.jvmargs>${jacocoargline} -Denv=ittest -Dspring.profiles.active=security-demo
                                        -Xdebug
                                    </cargo.jvmargs>
                                </properties>
                            </configuration>

                            <deployables>
                                <deployable>
                                    <pingURL>http://localhost:8088/rest/auth/status</pingURL>
                                    <pingTimeout>60000</pingTimeout>
                                    <!-- 5 min, time to deploy -->
                                    <properties>
                                        <context>/</context>
                                    </properties>
                                </deployable>
                            </deployables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.16</version>
                        <configuration>
                            <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacocoargline}</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>coverage</id>
            <activation>
                <property>
                    <name>coverage</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!-- redo configuration from parent - use itReportPath -->
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.6.4.201312101107</version>
                        <configuration>
                            <propertyName>jacocoargline</propertyName>
                            <includes>
                                <include>alien4cloud.*</include>
                            </includes>
                            <destFile>${sonar.jacoco.itReportPath}</destFile>
                            <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                            <append>true</append>
                        </configuration>
                        <executions>
                            <execution>
                                <id>pre-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-test</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
